{"ast":null,"code":"var _jsxFileName = \"/Users/rithikbansal/Desktop/Northeastern/Courses/CS5170/Mini Projects/4/frontend/src/TextSummarizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextSummarizer() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/summarize\", {\n        text\n      });\n      setSummary(response.data.summary);\n    } catch (error) {\n      console.error(\"Error summarizing text:\", error.response || error.message);\n      setSummary(\"Error summarizing text.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter Text for Summarization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      rows: \"6\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      children: \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(TextSummarizer, \"WDf8KsozbNSWS4qEO6j14Jtw1q4=\");\n_c = TextSummarizer;\nexport default TextSummarizer;\nvar _c;\n$RefreshReg$(_c, \"TextSummarizer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextSummarizer","_s","text","setText","summary","setSummary","handleSummarize","setLoading","response","post","data","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/rithikbansal/Desktop/Northeastern/Courses/CS5170/Mini Projects/4/frontend/src/TextSummarizer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles.css';\n\nfunction TextSummarizer() {\n    const [text, setText] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n\n    const handleSummarize = async () => {\n        setLoading(true);\n        try {\n            const response = await axios.post(\"http://localhost:5000/summarize\", { text });\n            setSummary(response.data.summary);\n        } catch (error) {\n            console.error(\"Error summarizing text:\", error.response || error.message);\n            setSummary(\"Error summarizing text.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n\n    return (\n        <div>\n            <h3>Enter Text for Summarization</h3>\n            <textarea\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                rows=\"6\"\n                cols=\"50\"\n            ></textarea>\n            <button onClick={handleSummarize}>Summarize</button>\n            {summary && (\n                <div>\n                    <h4>Summary:</h4>\n                    <p>{summary}</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default TextSummarizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,iCAAiC,EAAE;QAAEP;MAAK,CAAC,CAAC;MAC9EG,UAAU,CAACG,QAAQ,CAACE,IAAI,CAACN,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAAO,CAAC;MACzER,UAAU,CAAC,yBAAyB,CAAC;IACzC,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAGD,oBACIR,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCnB,OAAA;MACIoB,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC;IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACZnB,OAAA;MAAQ0B,OAAO,EAAEnB,eAAgB;MAAAQ,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDd,OAAO,iBACJL,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBnB,OAAA;QAAAe,QAAA,EAAIV;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CApCQD,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}